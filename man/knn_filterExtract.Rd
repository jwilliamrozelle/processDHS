% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knn_filterExtract.R
\name{knn_filterExtract}
\alias{knn_filterExtract}
\title{Extract Nearest Neighbor Based on Specified Parameters}
\usage{
knn_filterExtract(
  point_sf,
  y = NULL,
  filterVar = NULL,
  filterValue = NULL,
  extractColumn,
  knn = 1,
  type = "mean",
  y_dedup = T,
  na.rm = T
)
}
\arguments{
\item{point_sf}{An sf object; the source of the points for nearest neighbor search.}

\item{y}{An optional sf object used as the target for distance calculation. If NULL, `point_sf` 
is used as both source and target.}

\item{filterVar}{A character string specifying the column name in `point_sf` or `y` to use for 
filtering.}

\item{filterValue}{The value to filter by in the `filterVar` column.}

\item{extractColumn}{A character string specifying the column from which to extract the 
values after the nearest neighbor search.}

\item{knn}{An integer indicating the number of nearest neighbors to consider.}

\item{type}{A character string indicating the type of summary statistic to return; must be 
one of "mean", "median", "min", "max", or "sum".}

\item{y_dedup}{A boolean indicating whether to remove duplicated coordinates in `y`.}

\item{na.rm}{A boolean indicating whether missing values should be removed in the calculation.}
}
\value{
Returns a vector of the calculated summary statistics for the nearest neighbors.
}
\description{
This function performs a K-nearest neighbor search using a specified column from an sf object. 
It allows filtering of data based on given criteria and computes summary statistics for the 
nearest neighbors.
}
\note{
Ensure your sf objects (`point_sf` and optionally `y`) are properly formatted and
  contain the necessary columns specified in `filterVar` and `extractColumn`. 
  This function depends on `dplyr` and `sf` for its operations.
}
\examples{
# Load your sf object into point_sf
# Specify the parameters accordingly
result <- knn_filterExtract(point_sf = my_sf_data, 
                            extractColumn = "desired_column",
                            filterVar = "filter_column",
                            filterValue = "specific_value",
                            knn = 3,
                            type = "mean")
}
