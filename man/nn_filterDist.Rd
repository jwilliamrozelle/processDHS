% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nn_filterDist.R
\name{nn_filterDist}
\alias{nn_filterDist}
\title{Nearest Neighbor Filtered Distance}
\usage{
nn_filterDist(point_sf, filterVar, filterValue)
}
\arguments{
\item{point_sf}{An sf object representing the point layer.}

\item{filterVar}{The name of the column in `point_sf` used for filtering.}

\item{filterValue}{The value in `filterVar` to filter by; points meeting this criterion are considered in distance calculations.}

\item{uniqueID}{Optional; the name of the column in `point_sf` that uniquely identifies each point. 
If NULL, a temporary identifier will be automatically created.}
}
\value{
A numeric vector containing the minimum distance from each point to the nearest point that meets the criterion, 
        excluding the distance from a point to itself.
}
\description{
This function calculates the minimum distance from each point in an sf object to the nearest point that meets a specified criterion. 
It ensures that a point does not calculate the distance to itself by using a temporary unique identifier.
}
\examples{
# Load required libraries
library(sf)
library(dplyr)

# Assume point_sf is an sf object loaded with an 'id' column and a 'svc_art' column
# Example data creation for demonstration (not executable as is)
point_sf <- st_as_sf(data.frame(id = 1:10, x = rnorm(10), y = rnorm(10), svc_art = sample(0:1, 10, replace = TRUE)),
                    coords = c("x", "y"), crs = 4326)
uniqueID <- "id"
filterVar <- "svc_art"
filterValue <- 1

# Calculate minimum distances excluding self-distance
distances <- nn_filterDist(point_sf, filterVar, filterValue, uniqueID)
print(distances)
}
