% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_filterInBuffer.R
\name{count_filterInBuffer}
\alias{count_filterInBuffer}
\title{Count Points Within a Specified Radius Meeting a Filter Criterion}
\usage{
count_filterInBuffer(point_sf, filterVar, filterValue, radius)
}
\arguments{
\item{point_sf}{An `sf` object representing the point layer.}

\item{filterVar}{The name of the column in `point_sf` used for filtering.}

\item{filterValue}{The value in `filterVar` to filter by; only points meeting this criterion are counted within the specified radius.}

\item{radius}{The radius within which to count points, specified in the same units as the spatial data in `point_sf`.}
}
\value{
An integer vector where each element is the count of points meeting the criterion within the specified radius 
        from each corresponding point in `point_sf`.
}
\description{
This function calculates the number of points within a specified radius of each point in an sf object that meet a given criterion. 
It also ensures that each point does not count itself by setting the distance from a point to itself as infinity.
}
\examples{
# Load required libraries
library(sf)
library(dplyr)

# Assume point_sf is an sf object loaded with an 'id' column and a 'svc_art' column
# Example data creation for demonstration (not executable as is)
point_sf <- st_as_sf(data.frame(id = 1:10, x = rnorm(10), y = rnorm(10), svc_art = sample(0:1, 10, replace = TRUE)),
                    coords = c("x", "y"), crs = 4326)
filterVar <- "svc_art"
filterValue <- 1
radius <- 1000  # Assuming radius is in meters if CRS is projected

# Calculate counts within the specified radius
counts <- count_filterInBuffer(point_sf, filterVar, filterValue, radius)
print(counts)
}
